name: Release to Github Pages

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

permissions:
  contents: write # for committing to gh-pages branch.
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        subproject: ['PD-tasks', 'navigationData']
    steps:
      - uses: actions/checkout@v4 # repo checkout

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: '${{matrix.subproject}}/package-lock.json'

      - name: Cd to subproject
        run: cd ${{matrix.subproject}}

      - name: Install deps
        run: npm ci

      - name: Prepare environment
        run: |
          cat "CLIENT_EMAIL=\"${{secrets.CLIENT_EMAIL}}\"" > .env
          cat "PRIVATE_KEY=\"${{secrets.PRIVATE_KEY}}\"" >> .env

      - name: Build project
        run: npm run deploy

      - name: Clear env
        run: rm .env

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.subproject}}
          path: ./dist

  merge:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Merge build artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: all-dist
          delete-merged: true

      - name: Download merged
        uses: actions/download-artifact@v4
        with:
          name: all-dist

      - name: Provide index
        run: |
          cat >index.html << EOF
          <html>
          <head>
          <title>List of static files</title>
          </head>
          <body>
          <ol>
          EOF
          for item in $(ls .)
          do
            if [[ $item != index.html ]]; then
              echo "<li><a href=\"$item\">$item</a></li>" >> index.html
            fi
          done

      - name: Upload artifacts for pages
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist dir
          path: '.'
        
  Github-Pages-Release:
    needs: merge

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Deploy to GitHub Pages ðŸš€
        id: deployment
        uses: actions/deploy-pages@v4
